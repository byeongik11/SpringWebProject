package com.webProject.mvc01;

import java.util.HashMap;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;


//국내&해외 가이드 게시판 조회, 글 등록, 수정, 삭제
@Controller
public class BoardGuideCtrl {

	@Autowired
	IBoardSvc boardSvc;
	
	@Autowired
	IBoardRSvc boardRSvc;
	
	//국내
	
	//국내 목록 보기
	@RequestMapping("domesticBoard.do")	
	public String getDomesticBoard(Model model, PageInfoDto pageDto) {
		
		String viewName = boardRSvc.sltDomesticPage(model, pageDto);
		System.out.println("Index 번호 : " + pageDto.getIndex());
		System.out.println("pageCnt (페이지 번호 개수) : " + pageDto.getPageCnt());
		System.out.println("pageStartNum (출력페이지 시작 번호) : " + pageDto.getPageStartNum());
		System.out.println("listCnt(리스트수) : " + pageDto.getListCnt());
		System.out.println("total(리스트의 총갯수) : " + pageDto.getTotal());
		System.out.println("start(시작 번호) : " + pageDto.getStart());
		System.out.println("last(끝 번호) : " + pageDto.getLast());
		System.out.println("pagelastNum(끝 번호) : " + pageDto.getPageLastNum());
		return viewName;
	}
	
	//국내 글 보기(미완)
	@RequestMapping("domesticContent.do")	
	public String DomesticContent(Model model, BoardInfoDto boardDto, HttpSession session) {
		
		MbrDto mbrDto = (MbrDto) session.getAttribute("LOGIN");
		
		if(mbrDto == null) {
			model.addAttribute("MSG", "로그인이 필요합니다!");
			return "login";
		}
		System.out.println(boardDto.getTextNo());
		return "domesticContent";
	}
	
	//국내 글 쓰기 페이지 호출
	@RequestMapping("domesticWrite")		
	public String DomesticWritePage(Model model,HttpSession session) {
		
		MbrDto mbrDto = (MbrDto) session.getAttribute("LOGIN");
		
		if(mbrDto == null) {
			model.addAttribute("MSG", "로그인이 필요합니다!");
			return "login";
		}
		
		System.out.println("등록된 유저정보 : " + mbrDto.getMem_name());
		
		return "domesticWrite";
	}
	
	//국내 글 등록
	@RequestMapping("domesticInsert.do")
	public String DomesticInsert(HttpSession session,
			 @ModelAttribute("gubun") int gubun , Model model , BoardInfoDto dtoBoard) {
		
		MbrDto mbrDto = (MbrDto) session.getAttribute("LOGIN");
		
		if(mbrDto == null) {
			model.addAttribute("MSG", "세션이 만료되었습니다. 다시 로그인 해주세요.");
			return "login";
		}
		
		HashMap<String, Object> dataHm = new HashMap<String, Object>();
		dataHm.put("gubun", gubun);
		dataHm.put("loginData", mbrDto);
		dataHm.put("boardData", dtoBoard);
		
		String viewName = boardSvc.boardInsert(model, dataHm);
		
		return viewName;
	}
		
		
	
	//해외
	
	//해외 목록 보기
	@RequestMapping("abroadBoard.do")	
	public String getAbroadBoard(Model model, PageInfoDto pageDto) {
		System.out.println("페이지 번호 : " + pageDto.getIndex());
		System.out.println("페이지 번호 : " + pageDto.getIndex());
		System.out.println("페이지 번호 : " + pageDto.getIndex());
		System.out.println("페이지 번호 : " + pageDto.getIndex());
		String viewName = boardRSvc.sltAbroadPage(model, pageDto);
		System.out.println("Index 번호 : " + pageDto.getIndex());
		System.out.println("pageCnt (페이지 번호 개수) : " + pageDto.getPageCnt());
		System.out.println("pageStartNum (출력페이지 시작 번호) : " + pageDto.getPageStartNum());
		System.out.println("listCnt(리스트수) : " + pageDto.getListCnt());
		System.out.println("total(리스트의 총갯수) : " + pageDto.getTotal());
		System.out.println("start(시작 번호) : " + pageDto.getStart());
		System.out.println("last(끝 번호) : " + pageDto.getLast());
		System.out.println("pagelastNum(끝 번호) : " + pageDto.getPageLastNum());
		return viewName;
	}
	
	//해외 글 보기(미완)
	@RequestMapping("abroadContent.do")	
	public String abroadContent(Model model, BoardInfoDto boardDto, HttpSession session) {
		
		MbrDto mbrDto = (MbrDto) session.getAttribute("LOGIN");
		
		if(mbrDto == null) {
			model.addAttribute("MSG", "로그인이 필요합니다!");
			return "login";
		}
		System.out.println(boardDto.getTextNo());
		return "abroadContent";
	}
	
	//해외 글 쓰기 페이지 호출
	@RequestMapping("abroadWrite")		
	public String abroadWritePage(Model model,HttpSession session) {
		
		MbrDto mbrDto = (MbrDto) session.getAttribute("LOGIN");
		
		if(mbrDto == null) {
			model.addAttribute("MSG", "로그인이 필요합니다!");
			return "login";
		}
		
		System.out.println("등록된 유저정보 : " + mbrDto.getMem_name());
		
		return "abroadWrite";
	}
	
	//해외 글 등록
	@RequestMapping("abroadInsert.do")
	public String abroadInsert(HttpSession session,
			 @ModelAttribute("gubun") int gubun , Model model , BoardInfoDto dtoBoard) {
		
		MbrDto mbrDto = (MbrDto) session.getAttribute("LOGIN");
		
		if(mbrDto == null) {
			model.addAttribute("MSG", "세션이 만료되었습니다. 다시 로그인 해주세요.");
			return "login";
		}
		
		HashMap<String, Object> dataHm = new HashMap<String, Object>();
		dataHm.put("gubun", gubun);
		dataHm.put("loginData", mbrDto);
		dataHm.put("boardData", dtoBoard);
		
		String viewName = boardSvc.boardInsert(model, dataHm);
		
		return viewName;
	}
	
	public String abroadUpdate(Model model, BoardInfoDto dtoBoard) {	//
		return null;
	}
	
	public String abroadDelete(Model model, BoardInfoDto dtoBoard) {	//
		return null;
	}

	
	
}
