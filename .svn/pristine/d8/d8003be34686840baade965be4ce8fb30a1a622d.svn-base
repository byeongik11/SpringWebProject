package com.webProject.mvc01;

import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;

public class GroupBoardSvcImpl implements IGroupRSvc {

	@Autowired
	IGroupRDao groupRDao;
	
	@Override
	public String insertGroup(Model model, GroupDto dtoGroup) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String deleteGroup(Model model, GroupDto dtoGroup) {
		// TODO Auto-generated method stub
		return null;
	}
	
	//그룹
	
	@Override
	public String sltGroupPage(Model model, SearchDto serDto, PageInfoDto pageDto) {
		System.out.println("서비스 진입");
		
		pageDto.setGubun(3);		//구분자 그룹으로 세팅 (4번)
		
		sltPage(model, serDto, pageDto);	//공통 쿼리 실행
		
		model.addAttribute("serDto",serDto);
		
		return "groupBoard"; 
	}
	
	public void sltPage(Model model, SearchDto serDto, PageInfoDto pageDto) {
		System.out.println("=====================================");
		System.out.println("=====================================");
		System.out.println("=====================================");
		System.out.println("=====================================");
		System.out.println("=====================================");
	
		
		ArrayList<BoardInfoDto> list;
		
		int pageMax = groupRDao.sltPageMax(pageDto);			//글 갯수 
		
		if(serDto == null) {		//페이지 부를때
			System.out.println("svc = 검색어 음슴");
			pageDto.setTotal(pageMax);		//뷰에서 페이징하기 위해 지정
			list = groupRDao.sltPageIndex(pageDto);	// 전체조회
			
		}
		else if("all".equals(serDto.getSearchWhat())) {		//전체 검색일때
			System.out.println("svc = all");
			
			pageDto.setTitleText(serDto.getSearchTxt());		//제목 검색어
			pageDto.setWriterText(serDto.getSearchTxt());		//작성자 검색어

			
			pageDto.setTotal(groupRDao.sltAllMax(pageDto));		//뷰에서 페이징하기 위해 지정
			list = groupRDao.sltAllIndex(pageDto);	// 조회
			System.out.println("페이지 index : " + pageDto.getIndex());
			
			System.out.println("페이지 구분자 : " + pageDto.getGubun());
			System.out.println("페이지 StartData : " + pageDto.getStartData());
			System.out.println("페이지 ListCnt : " + pageDto.getListCnt());
			System.out.println("페이지 TitleText : " + pageDto.getTitleText());
			System.out.println("페이지 WriterText : " + pageDto.getWriterText());
			System.out.println("페이지 Start : " + pageDto.getStart());
			
			
		}
		else if("subject".equals(serDto.getSearchWhat())) { //제목 검색일때
			System.out.println("svc = subject");
			
			pageDto.setTitleText(serDto.getSearchTxt());		//제목 검색어

			pageDto.setTotal(groupRDao.sltTitleMax(pageDto));	//뷰에서 페이징하기 위해 지정
			list = groupRDao.sltTitleIndex(pageDto);	// 조회
			
		}
		else if("writer".equals(serDto.getSearchWhat())) { 	//작성자 검색일때
			System.out.println("svc = writer");
			
			pageDto.setWriterText(serDto.getSearchTxt());		//작성자 검색어

			pageDto.setTotal(groupRDao.sltWriterMax(pageDto));	//뷰에서 페이징하기 위해 지정
			list = groupRDao.sltWriterIndex(pageDto);	// 조회
			
		}
		else {				//검색어 없을때
			System.out.println("svc = 페이지 처음 호출");

			pageDto.setTotal(pageMax);		//뷰에서 페이징하기 위해 지정
			list = groupRDao.sltPageIndex(pageDto);	// 전체조회
		}
		
		model.addAttribute("list", list);
        model.addAttribute("pageDto", pageDto);
        
        System.out.println("리스트와 페이지 넣기");
        
	}

}
