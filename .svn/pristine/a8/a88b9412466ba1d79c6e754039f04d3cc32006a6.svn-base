package com.webProject.mvc01;

import java.util.HashMap;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;


//일반 게시판 조회, 글 등록, 수정, 삭제
@Controller
public class BoardCommonCtrl {

	@Autowired
	IBoardSvc boardSvc;
	
	@Autowired
	IBoardRSvc boardRSvc;
	
	
	//커뮤니티
	
	//커뮤니티 목록 보기
	@RequestMapping("communityBoard.do")	
	public String getCommunityBoard(Model model, PageInfoDto pageDto) {
		
		String viewName = boardRSvc.sltCommunityPage(model, pageDto);
		return viewName;
	}
	
	//커뮤니티 글 보기(미완)
	@RequestMapping("communityContent.do")	
	public String CommunityContent(Model model, BoardInfoDto boardDto, HttpSession session) {
		
		MbrDto mbrDto = (MbrDto) session.getAttribute("LOGIN");
		
		if(mbrDto == null) {
			model.addAttribute("MSG", "로그인이 필요합니다!");
			return "login";
		}
		System.out.println(boardDto.getTextNo());
		return "communityContent";
	}
	
	//커뮤니티 글 쓰기 페이지 호출
	@RequestMapping("communityWrite")		
	public String CommunityWritePage(Model model,HttpSession session) {
		
		MbrDto mbrDto = (MbrDto) session.getAttribute("LOGIN");
		
		if(mbrDto == null) {
			model.addAttribute("MSG", "로그인이 필요합니다!");
			return "login";
		}
		
		System.out.println("등록된 유저정보 : " + mbrDto.getMem_name());
		
		return "communityWrite";
	}
	
	//커뮤니티 글 등록
	@RequestMapping("communityInsert.do")
	public String CommunityInsert(HttpSession session,
			 @ModelAttribute("gubun") int gubun , Model model , BoardInfoDto dtoBoard) {
		
		MbrDto mbrDto = (MbrDto) session.getAttribute("LOGIN");
		
		if(mbrDto == null) {
			model.addAttribute("MSG", "세션이 만료되었습니다. 다시 로그인 해주세요.");
			return "login";
		}
		
		HashMap<String, Object> dataHm = new HashMap<String, Object>();
		dataHm.put("gubun", gubun);
		dataHm.put("loginData", mbrDto);
		dataHm.put("boardData", dtoBoard);
		
		String viewName = boardSvc.boardInsert(model, dataHm);
		
		return viewName;
	}
	
}
